; (stream str len)
fn write 3 0 {
	1 rot4 syscall3 drop
}

fn endl 0 0 {
	1 "\n" write
}

; (stream num)
fn fputu 2 0 {
	auto stream 1
	swap pop stream

	reserve buf 20
	auto pos 1
	auto len 1

	dup 0 = if {
		drop

		buf 48 w8
		stream buf 1 write
		
		ret
	}
	
	0 pop len
	buf 20 + pop pos

	while dup 0 > {
		pos -- pop pos

		10 %%
		48 +

		pos swap w8

		len ++ pop len
	}
	drop

	stream pos len write
}

; (num)
fn putu 1 0 {
	1 swap fputu
}

; (num)
fn eputu 1 0 {
	2 swap fputu
}

; (num)
fn putuln 1 0 {
	1 swap fputu
	endl
}

; (num)
fn eputuln 1 0 {
	2 swap fputu
	endl
}

; (str len)
fn puts 2 0 {
	1 rot write	
}

; (str len)
fn eputs 2 0 {
	2 rot write	
}

; (ch)
fn putc 1 0 {
	reserve ch 1
	ch swap w8
	1 ch 1 write
}

; (ch)
fn eputc 1 0 {
	reserve ch 1
	ch swap w8
	2 ch 1 write
}