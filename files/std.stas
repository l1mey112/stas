exit ! in code int do
	60 code syscall1
	_
end

write sds ! in buf * count int do
	1 1 buf count syscall3
	_
end

endl ! in do
	"\n" 1 write
end

strlen int in buf * do
	buf
	while @ * :: 8 0 != do
		++
	end
	buf -=
end

print ! in buf * do
	buf
	buf strlen
	write
end

println ! in buf * do
	buf print
	endl
end

memset ! in ptr * val int len int do 
	ptr
	while @ ptr len += < do
		@ val & :: 8
		++
	end
	_
end

uput ! in num int do
	local * buf [20]      ; 18446744073709551615
	local * pos 0
	local int len 0

	if num 0 = do       ; avoid division by 0
		buf 48 & :: 8   ; '0'
		buf 1 write
		return
	end

	buf 20 += pop pos
	
	num
	while @ 0 > do
		pos -- pop pos

		10 %%           ; get remainder
		48 +=           ; convert to ascii
		pos ~ & :: 8    ; write char into buffer

		len ++ pop len
	end
	_

	pos len write
end

uputln ! in num int do
	num uput
	endl
end

getch int in do
	local * ch [1]
	0 0 ch 1 syscall3
	_
	
	ch * :: 8
end

read_stdin ! in buf * len int do
	0 0 buf len syscall3
	_
end